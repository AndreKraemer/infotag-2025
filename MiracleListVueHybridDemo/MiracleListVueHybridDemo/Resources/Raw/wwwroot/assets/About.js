import{ae as g,q as n,aL as v,a4 as w,aa as f,a5 as t,ab as s,B as r,I as o,Q as m,ax as V,bV as A,aR as L,bW as h,bg as x}from"./index.js";const y="/img/vuelogo.png",M={class:"abstand"},k=["href"],B={class:"abstand"},R=["href"],c=g({__name:"About",setup(S){let b=n(""),l=n(""),i=n(""),a="https://miraclelistbackend.azurewebsites.net",u=window.location.origin;async function d(){let e=await(V("MiracleListProxy")||new A("")).about();b.value="Ergebnis:"+e,console.log("About:Antwort vom Server!",e),l.value=e[6],i.value=e[8]}return v(()=>{console.log("About:OnMounted"),d()}),(p,e)=>(L(),w(m,null,[e[9]||(e[9]=f('<a href="https://vuejs.org/"><img align="right" width="100" src="'+y+'"></a><h2>MiracleList mit Vue.js</h2> Autor: Dr. Holger Schwichtenberg, <a href="https://www.IT-Visions.de/">www.IT-Visions.de</a><br> Quellcode: <a href="https://github.com/HSchwichtenberg/MiracleListVue">GitHub</a><br> Live in der Cloud: <a href="http://miraclelist-vue.azurewebsites.net/">Microsoft Azure</a>',10)),t("div",M,[e[0]||(e[0]=t("h3",null,"Client",-1)),e[1]||(e[1]=s(" URL: ")),t("a",{href:r(u)},o(r(u)),9,k),e[2]||(e[2]=s()),e[3]||(e[3]=t("br",null,null,-1)),s(" Application Version: "+o(r(h))+" ",1),e[4]||(e[4]=t("br",null,null,-1)),s(" Vue.js Version: "+o(x))]),t("div",B,[e[5]||(e[5]=t("h3",null,"Backend",-1)),e[6]||(e[6]=s(" URL: ")),t("a",{href:r(a)},o(r(a)),9,R),e[7]||(e[7]=t("br",null,null,-1)),s(" "+o(r(l)),1),e[8]||(e[8]=t("br",null,null,-1)),s(" "+o(r(i)),1)])],64))}});export{c as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWJvdXQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2ltZy92dWVsb2dvLnBuZyIsIi4uLy4uL3NyYy92aWV3cy9BYm91dC52dWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJfX1ZJVEVfUFVCTElDX0FTU0VUX183NDkwYjU4N19fXCIiLCI8dGVtcGxhdGU+XHJcbjxhIGhyZWY9XCJodHRwczovL3Z1ZWpzLm9yZy9cIj5cclxuPGltZyBhbGlnbj1cInJpZ2h0XCIgd2lkdGg9XCIxMDBcIiBzcmM9XCIvaW1nL3Z1ZWxvZ28ucG5nXCI+XHJcbjwvYT5cclxuXHJcbjxoMj5NaXJhY2xlTGlzdCBtaXQgVnVlLmpzPC9oMj5cclxuIEF1dG9yOiBEci4gSG9sZ2VyIFNjaHdpY2h0ZW5iZXJnLCA8YSBocmVmPVwiaHR0cHM6Ly93d3cuSVQtVmlzaW9ucy5kZS9cIj53d3cuSVQtVmlzaW9ucy5kZTwvYT48YnI+XHJcbiBRdWVsbGNvZGU6IDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vSFNjaHdpY2h0ZW5iZXJnL01pcmFjbGVMaXN0VnVlXCI+R2l0SHViPC9hPjxicj5cclxuIExpdmUgaW4gZGVyIENsb3VkOiA8YSBocmVmPVwiaHR0cDovL21pcmFjbGVsaXN0LXZ1ZS5henVyZXdlYnNpdGVzLm5ldC9cIj5NaWNyb3NvZnQgQXp1cmU8L2E+XHJcblxyXG4gPGRpdiBjbGFzcz1cImFic3RhbmRcIj5cclxuICA8aDM+Q2xpZW50PC9oMz5cclxuICBVUkw6IDxhIDpocmVmPVwiY2xpZW50VVJMXCI+e3sgY2xpZW50VVJMIH19PC9hPiA8YnI+XHJcbiAgQXBwbGljYXRpb24gVmVyc2lvbjoge3sgYXBwdmVyc2lvbiB9fSA8YnI+XHJcbiAgVnVlLmpzIFZlcnNpb246IHt7IHZ1ZVZlcnNpb24gfX1cclxuIDwvZGl2PlxyXG4gXHJcbiA8ZGl2IGNsYXNzPVwiYWJzdGFuZFwiPlxyXG4gIDxoMz5CYWNrZW5kPC9oMz5cclxuICBVUkw6IDxhIDpocmVmPVwic2VydmVyVVJMXCI+e3sgc2VydmVyVVJMIH19PC9hPjxiciAvPlxyXG4gIHt7IHNlcnZlckFwcFZlcnNpb24gfX08YnIgLz5cclxuICB7eyBzZXJ2ZXJGcmFtZXdvcmsgfX1cclxuICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzdHlsZT5cclxuLmFic3RhbmQgeyBtYXJnaW4tdG9wOiAxMHB4fVxyXG48L3N0eWxlPlxyXG5cclxuPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cclxuaW1wb3J0IHsgcmVmLCBvbk1vdW50ZWQsIGluamVjdCB9IGZyb20gXCJ2dWVcIjtcclxuaW1wb3J0IHsgTWlyYWNsZUxpc3RQcm94eSB9IGZyb20gXCJAL3NlcnZpY2VzL01pcmFjbGVMaXN0UHJveHlWMlwiO1xyXG5pbXBvcnQgeyB2ZXJzaW9uIGFzIHZ1ZVZlcnNpb24gfSBmcm9tIFwidnVlXCI7XHJcbmltcG9ydCB7IHZlcnNpb24gYXMgYXBwdmVyc2lvbiB9IGZyb20gXCIuLi8uLi9wYWNrYWdlLmpzb25cIjtcclxuXHJcbmxldCByZXN1bHQgPSByZWYoXCJcIik7XHJcbmxldCBzZXJ2ZXJBcHBWZXJzaW9uID0gcmVmKFwiXCIpO1xyXG5sZXQgc2VydmVyRnJhbWV3b3JrID0gcmVmKFwiXCIpO1xyXG5sZXQgc2VydmVyVVJMID0gaW1wb3J0Lm1ldGEuZW52LlZJVEVfRU5WX0JhY2tlbmQ7XHJcbmxldCBjbGllbnRVUkwgPSB3aW5kb3cubG9jYXRpb24ub3JpZ2luO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gQWJvdXQoKSB7XHJcbiBsZXQgcHJveHk6IE1pcmFjbGVMaXN0UHJveHkgPSBpbmplY3QoXCJNaXJhY2xlTGlzdFByb3h5XCIpIHx8IG5ldyBNaXJhY2xlTGlzdFByb3h5KFwiXCIpOyAvLyBTcHJpbnQgNFxyXG5cclxuIGxldCByID0gYXdhaXQgcHJveHkuYWJvdXQoKTtcclxuIHJlc3VsdC52YWx1ZSA9IFwiRXJnZWJuaXM6XCIgKyByO1xyXG4gY29uc29sZS5sb2coXCJBYm91dDpBbnR3b3J0IHZvbSBTZXJ2ZXIhXCIsIHIpO1xyXG4gc2VydmVyQXBwVmVyc2lvbi52YWx1ZSA9IHJbNl07XHJcbiBzZXJ2ZXJGcmFtZXdvcmsudmFsdWUgPSByWzhdO1xyXG5cclxuIC8vIG9kZXJcclxuIC8vIHZhciBwcm94eSA9IG5ldyBNaXJhY2xlTGlzdFByb3h5KGltcG9ydC5tZXRhLmVudi5WSVRFX0VOVl9CYWNrZW5kKTtcclxuIC8vIHByb3h5LmFib3V0KClcclxuIC8vIC50aGVuKHIgPT4geyAgcmVzdWx0LnZhbHVlID0gXCJFcmdlYm5pczpcIiArIHI7XHJcbiAvLyBjb25zb2xlLmxvZyhcIkFib3V0OkFudHdvcnQgdm9tIFNlcnZlciFcIiwgcilcclxuIC8vIFNlcnZlckFwcFZlcnNpb24udmFsdWUgPSByWzZdO1xyXG4gLy8gU2VydmVyRnJhbWV3b3JrLnZhbHVlID0gcls4XTtcclxuIC8vIH0pXHJcbiAvLyAuY2F0Y2goZXJyID0+IHsgY29uc29sZS5lcnJvcihlcnIpO30pO1xyXG59XHJcblxyXG5vbk1vdW50ZWQoKCkgPT4ge1xyXG4gLy8gVGhpcyBob29rIGlzIG5vdCBjYWxsZWQgZHVyaW5nIHNlcnZlci1zaWRlIHJlbmRlcmluZy5cclxuIGNvbnNvbGUubG9nKFwiQWJvdXQ6T25Nb3VudGVkXCIpO1xyXG4gQWJvdXQoKTtcclxufSk7XHJcbjwvc2NyaXB0PiJdLCJuYW1lcyI6WyJfaW1wb3J0c18wIiwicmVzdWx0IiwicmVmIiwic2VydmVyQXBwVmVyc2lvbiIsInNlcnZlckZyYW1ld29yayIsInNlcnZlclVSTCIsImNsaWVudFVSTCIsIkFib3V0IiwiciIsImluamVjdCIsIk1pcmFjbGVMaXN0UHJveHkiLCJvbk1vdW50ZWQiXSwibWFwcGluZ3MiOiI0SUFBQSxNQUFlQSxFQUFBLDhHQ21DWCxJQUFBQyxFQUFTQyxFQUFJLEVBQUUsRUFDZkMsRUFBbUJELEVBQUksRUFBRSxFQUN6QkUsRUFBa0JGLEVBQUksRUFBRSxFQUN4QkcsRUFBWSwrQ0FDWkMsRUFBWSxPQUFPLFNBQVMsT0FFaEMsZUFBZUMsR0FBUSxDQUdsQixJQUFBQyxFQUFJLE1BRnNCQyxFQUFPLGtCQUFrQixHQUFLLElBQUlDLEVBQWlCLEVBQUUsR0FFL0QsUUFDcEJULEVBQU8sTUFBUSxZQUFjTyxFQUNyQixRQUFBLElBQUksNEJBQTZCQSxDQUFDLEVBQzFDTCxFQUFpQixNQUFRSyxFQUFFLEdBQzNCSixFQUFnQixNQUFRSSxFQUFFLEVBVzNCLENBRUEsT0FBQUcsRUFBVSxJQUFNLENBRWYsUUFBUSxJQUFJLGlCQUFpQixFQUN2QkosR0FBQSxDQUNOIn0=
